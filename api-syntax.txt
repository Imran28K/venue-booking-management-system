for get

app.get('/api/your-endpoint', (req, res) => {
  const query = 'SELECT * FROM your_table'; // Put your query or logic here
  db.query(query, (err, results) => {
    if (err) {
      console.error('Error: ' + err.stack);
      res.status(500).send('Error message');
      return;
    }
    res.json(results); // Send the results as a JSON response
  });
});

-----------------------------------------------------------------------------------------------------------------------------------

for post

app.post('/api/your-endpoint', (req, res) => {
  const { field1, field2 } = req.body; // Destructure the data from the request body
  const query = 'INSERT INTO your_table (field1, field2) VALUES (?, ?)'; // Adjust query and field names
  db.query(query, [field1, field2], (err, result) => {
    if (err) {
      console.error('Error: ' + err.stack);
      res.status(500).send('Error message');
      return;
    }
    res.status(201).send('Data inserted successfully'); // Response after successful insertion
  });
});

-----------------------------------------------------------------------------------------------------------------------------------

for delete 

app.delete('/api/your-endpoint/:id', (req, res) => {
  const { id } = req.params; // Get the id parameter from the URL
  const query = 'DELETE FROM your_table WHERE id = ?'; // Adjust the query based on your table structure
  db.query(query, [id], (err, result) => {
    if (err) {
      console.error('Error: ' + err.stack);
      res.status(500).send('Error message');
      return;
    }
    if (result.affectedRows === 0) {
      res.status(404).send('Record not found');
      return;
    }
    res.send('Record deleted successfully'); // Response after successful deletion
  });
});

-----------------------------------------------------------------------------------------------------------------------------------

script in HTML for get

<script>
  // Function to fetch data from the API
  function fetchData() {
    fetch('/api/your-endpoint') // Replace with your API endpoint
      .then(response => response.json())
      .then(data => {
        const tableBody = document.getElementById('data-table-body'); // Replace with your table body ID
        tableBody.innerHTML = ''; // Clear existing rows
        data.forEach(item => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${item.field1}</td> <!-- Replace field1 with your data field -->
            <td>${item.field2}</td> <!-- Replace field2 with your data field -->
          `;
          tableBody.appendChild(row);
        });
      })
      .catch(error => console.error('Error fetching data:', error));
  }

  // Call fetchData on page load
  window.onload = fetchData;
</script>

-----------------------------------------------------------------------------------------------------------------------------------

script in HTML for post 

<script>
  // Function to handle form submission
  function handleSubmit(event) {
    event.preventDefault(); // Prevent form default action
    const field1 = document.getElementById('field1').value; // Replace with your input ID
    const field2 = document.getElementById('field2').value; // Replace with your input ID

    fetch('/api/your-endpoint', { // Replace with your API endpoint
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ field1, field2 }), // Adjust based on your data structure
    })
      .then(response => {
        if (response.ok) {
          alert('Data submitted successfully!');
          fetchData(); // Refresh table after adding data
        } else {
          alert('Error submitting data');
        }
      })
      .catch(error => console.error('Error:', error));
  }

  // Attach the form submit handler
  document.getElementById('your-form-id').addEventListener('submit', handleSubmit); // Replace with your form ID
</script>

-----------------------------------------------------------------------------------------------------------------------------------

script in HTML for delete 

<script>
  // Function to delete a record
  function deleteRecord(id) {
    fetch(`/api/your-endpoint/${id}`, { // Replace with your API endpoint
      method: 'DELETE',
    })
      .then(response => {
        if (response.ok) {
          alert('Record deleted successfully!');
          fetchData(); // Refresh table after deletion
        } else {
          alert('Error deleting record');
        }
      })
      .catch(error => console.error('Error:', error));
  }

  // Add event listeners dynamically for delete buttons
  function attachDeleteListeners() {
    document.querySelectorAll('.delete-btn').forEach(button => {
      button.addEventListener('click', () => {
        const id = button.dataset.id; // Assume the button has a data-id attribute
        deleteRecord(id);
      });
    });
  }

  // Example integration with fetchData
  function fetchData() {
    fetch('/api/your-endpoint') // Replace with your API endpoint
      .then(response => response.json())
      .then(data => {
        const tableBody = document.getElementById('data-table-body'); // Replace with your table body ID
        tableBody.innerHTML = ''; // Clear existing rows
        data.forEach(item => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${item.field1}</td> <!-- Replace field1 with your data field -->
            <td>${item.field2}</td> <!-- Replace field2 with your data field -->
            <td>
              <button class="delete-btn" data-id="${item.id}">Delete</button>
            </td>
          `;
          tableBody.appendChild(row);
        });
        attachDeleteListeners(); // Attach delete listeners after populating the table
      })
      .catch(error => console.error('Error fetching data:', error));
  }

  // Call fetchData on page load
  window.onload = fetchData;
</script>

